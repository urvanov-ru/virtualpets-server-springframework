<?xml version = "1.0" encoding = "UTF-8"?>
<beans xmlns = "http://www.springframework.org/schema/beans"
    xmlns:xsi = "http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p = "http://www.springframework.org/schema/p"
    xmlns:util = "http://www.springframework.org/schema/util"
    xmlns:security = "http://www.springframework.org/schema/security"
    xmlns:http = "http://www.springframework.org/schema/http"
    xsi:schemaLocation = "http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd 
    http://www.springframework.org/schema/security
    http://www.springframework.org/schema/security/spring-security.xsd
    http://www.springframework.org/schema/http
    http://www.springframework.org/schema/http/spring-http.xsd
     ">

    <security:http pattern = "/site/**"
            authentication-manager-ref = "authenticationManager">
        <security:intercept-url pattern = "/site/admin/**"
            access = "hasRole('ROLE_ADMIN')" />
        <security:intercept-url pattern = "/site/user/**"
            access = "hasRole('ROLE_USER')" />
        <security:intercept-url pattern = "/site/**"
            access = "permitAll" />
        <security:cors  /> 
        <security:csrf />
        <security:form-login login-page = "/site/login"
            login-processing-url = "/site/login"
            default-target-url = "/site/user/profile"
            authentication-failure-url = "/site/login?error=1" />
        <security:logout logout-url = "/site/logout"
            logout-success-url = "/site/login?logout=1" />
    </security:http> 

    <security:http pattern = "/api/**"
            authentication-manager-ref = "authenticationManager"
            entry-point-ref = "authenticationEntryPoint"
            >
        <security:intercept-url pattern = "/rest/v1/PublicService/**"
            access = "permitAll" />
        <security:intercept-url pattern = "/rest/**"
            access = "hasRole('ROLE_USER')" />
        <security:cors /> 
        <security:csrf disabled = "true" />
    </security:http>
    
    <bean id = "securityContextRepository"
            class = "org.springframework.security.web.context.DelegatingSecurityContextRepository">
        <constructor-arg ref = "securityContextRepositoryList" />
    </bean>
    
    <util:list id = "securityContextRepositoryList">
        <bean class = "org.springframework.security.web.context.RequestAttributeSecurityContextRepository" />
        <bean class = "org.springframework.security.web.context.HttpSessionSecurityContextRepository" />
    </util:list>
    
    <bean id = "authenticationEntryPoint"
        class = "ru.urvanov.virtualpets.server.auth.CustomAuthenticationEntryPoint">
    </bean>
    
    <bean id = "passwordEncoder"
        class = "org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
    
    <bean id = "authenticationProvider"
        class = "org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <property name = "userDetailsService" ref = "userDetailsService" />
        <property name = "passwordEncoder" ref = "passwordEncoder" />
    </bean>
    
    <security:authentication-manager>
        <security:authentication-provider
            ref = "authenticationProvider" >
        </security:authentication-provider>
    </security:authentication-manager>

    <security:method-security />

</beans>